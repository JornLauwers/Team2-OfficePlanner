@page "/reservation"
@inject HttpClient Http


<h3>Make a New Reservation</h3>

<EditForm Model="@newRes" OnValidSubmit="OnSubmit">

    <div class="row">
        <div class="col-md-4">
            <RadzenDatePicker @bind-Value=@newRes.StartDate DateFormat="d" Change=@(args => OnChangeDate(args, "DatePicker", "dd/MM/yyyy")) />

            <RadzenRadioButtonList @bind-Value=@value TValue="int" Orientation="Orientation.Vertical" Change=@((args) => OnChangeRadio(args, "Select Hele dag/Halve Dag"))>
                <Items>
                    <RadzenRadioButtonListItem Text="Hele Dag" Value="1" />
                    <RadzenRadioButtonListItem Text="halve Dag" Value="2" />
                </Items>
            </RadzenRadioButtonList>


        </div>
        <div class="col-md-7" id="accordionExample">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">Ruimte #1</div>
                    <div class="accordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingOne">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                    Bureau #1 <span class="badge badge-success float-end">Beschikbaar van 12:00 tot 16:00 </span>
                                </button>
                            </h2>
                            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <span>Kies uw start tijd: </span>
                                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" TimeOnly="true" DateFormat="HH:mm" Change=@(args => OnChange(args, "Time-only DatePicker", "HH:mm")) />
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingTwo">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                    Bureau #2 <span class="badge badge-success float-end">Beschikbaar van 12:00 tot 16:00 </span>
                                </button>
                            </h2>
                            <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <span>Kies uw start tijd: </span>
                                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" TimeOnly="true" DateFormat="HH:mm" Change=@(args => OnChange(args, "Time-only DatePicker", "HH:mm")) />
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingThree">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                    Bureau #3 <span class="badge badge-success float-end">Beschikbaar van 12:00 tot 16:00 </span>
                                </button>
                            </h2>
                            <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
                                <div class="accordion-body">
                                    <span>Kies uw start tijd: </span>
                                    <RadzenDatePicker TValue="DateTime?" ShowTime="true" TimeOnly="true" DateFormat="HH:mm" Change=@(args => OnChange(args, "Time-only DatePicker", "HH:mm")) />
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>




@code {
    [Inject]
    public IReservationsService ReservationsService { get; set; }
    DateTime today = DateTime.Today;



    protected override async Task<Task> OnInitializedAsync()
    {
        var res = await ReservationsService.GetReservationByDate(today, today.AddDays(1));
        var result = await Http.GetFromJsonAsync<List<RoomsReadViewModel>>("api/Rooms");
        Console.WriteLine();
        Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject(result));
        Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject(res.Reservations[0]));
        return base.OnInitializedAsync();
    }


    int value = 1;
    DateTime date = DateTime.Today.AddDays(1);

    OfficePlanner.Shared.ViewModels.ReservationCreateViewModel newRes = new OfficePlanner.Shared.ViewModels.ReservationCreateViewModel()
    {
        User = "1",
        Room = 1
    };

    void OnChangeDate(DateTime? value, string name, string format)
    {
        Console.WriteLine($"{name} value changed to {value?.ToString(format)}");
    }
    void OnChangeRadio(int? value, string name)
    {
        Console.WriteLine($"{name} value changed to {value}");
    }
    async Task OnSubmit()
    {
        var isValid = await ReservationsService.Validate(newRes);

        if (isValid)
        {
            await ReservationsService.CreateReservation(newRes);
            Console.WriteLine("reservation is submitted");
        }
        Console.WriteLine("reservation is unsuccessful");

    }
    void OnChange(DateTime? value, string name, string format)
    {
        Console.WriteLine($"{name} value changed to {value}");
    }

}
